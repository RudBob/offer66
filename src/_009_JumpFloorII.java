/**
 * 一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。
 * 求该青蛙跳上一个n级的台阶总共有多少种跳法。
 */
public class _009_JumpFloorII {
    /**
     * 我们的第一反应：
     * 斐波那契数列。
     * 但是又感觉不太对，那么我们推导一下，
     * 每个算式最后的 + 1都是直接一步到位
     * f(1) = 1
     * f(2) = f(1) +1
     * f(3) = f(1) + f(2) + 1   // 可以从1爬到3，也可以从2爬到3，也可以直接到3
     * f(4) = f(1) + f(2) + f(3) + 1        // 规律很明显了
     * // 到以上，我们就发现了规律，可以编码了，但是更进一步的话，有惊喜。
     * f(1) =1,f(2) =2,f(3) = 4, f(4) = 8
     * f(5) = f(1) + f(2) + f(3) + f(4) + 1 // 如果我们把之前的四个都代入到f(5)会怎样根
     * f(5) = 16,
     * emm, 每一位都等于前n-1位的和+1.
     * 所以f(n) = 2^(n-1);
     */
    public int JumpFloorII(int n) {
        int res = 1;
        while (n-- != 1) {
            res <<= 1;
        }
        return res;
    }

}
